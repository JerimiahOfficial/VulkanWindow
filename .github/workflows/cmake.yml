name: CMake

on: push

jobs:
  build:
    name: ${{ matrix.os }} Release
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Update packages
      run: |
        sudo apt update
        sudo apt install -y libglfw3-dev gcc-multilib g++-multilib libvulkan-dev libxinerama-dev libxcursor-dev libxi-dev

    - if: ${{ matrix.os == 'windows-latest' }}
      name: Install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe" -OutFile "C:\vulkan-sdk.exe"
        C:\vulkan-sdk.exe --accept-licenses --default-answer --confirm-command install
        $version = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest/windows.txt").Content
        $Env:VK_SDK_PATH = "C:\VulkanSDK\$version"
        $Env:VULKAN_SDK = "C:\VulkanSDK\$version"
        $env:PATH += ";C:\VulkanSDK\$version\Bin"
        Get-ChildItem env:

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Configure for linux
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=g++
        -DCMAKE_C_COMPILER=gcc

    - if: ${{matrix.os == 'windows-latest'}}
      name: Configure for windows
      run: >
        cmake -B build
        -G "MinGW Makefiles"
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=g++
        -DCMAKE_C_COMPILER=gcc

    - name: Build release
      run: cmake --build build --config Release

    # - name: Test
    #   working-directory: ${{ github.workspace }}/build
    #   run: ctest --build-config Release

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}
        path: build/**/VulkanWindow*

  release:
    name: Release
    runs-on: [ubuntu-latest]
    needs: [build]
      
    steps:
    - uses: actions/checkout@v3
            
    - name: Download Linux Artifact
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest

    - name: Download Windows Artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-latest
      
    - name: Release Build
      uses: softprops/action-gh-release@v1
      with:
        name: Release
        tag_name: ${{ github.run_id }}
        body: |
          **This release has been built by Github Actions**
          [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        files: |
          VulkanWindow
          VulkanWindow.exe