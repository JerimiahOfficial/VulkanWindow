name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.os }} Release
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - if: ${{matrix.os == 'ubuntu-latest'}}
      run: |
        sudo apt update
        sudo apt install -y libglfw3-dev gcc-multilib g++-multilib libvulkan-dev libxinerama-dev libxcursor-dev libxi-dev

    - if: ${{ matrix.os == 'windows-latest' }}
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.204.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}
        path: build/VulkanWindow*

  release:
    name: Release
    runs-on: [ubuntu-latest]
    needs: [build]
      
    steps:
    - uses: actions/checkout@v3
            
    - name: Download Linux Artifact
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest

    - name: Download Windows Artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-latest
      
    - name: Release Build
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          **This release has been built by Github Actions**
          [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        files: |
          VulkanWindow
          VulkanWindow.exe